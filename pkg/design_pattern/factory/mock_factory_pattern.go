// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/design_pattern/factory/factory_pattern.go

// Package factory is a generated GoMock package.
package factory

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockICreator is a mock of ICreator interface.
type MockICreator struct {
	ctrl     *gomock.Controller
	recorder *MockICreatorMockRecorder
}

// MockICreatorMockRecorder is the mock recorder for MockICreator.
type MockICreatorMockRecorder struct {
	mock *MockICreator
}

// NewMockICreator creates a new mock instance.
func NewMockICreator(ctrl *gomock.Controller) *MockICreator {
	mock := &MockICreator{ctrl: ctrl}
	mock.recorder = &MockICreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICreator) EXPECT() *MockICreatorMockRecorder {
	return m.recorder
}

// NewProduct mocks base method.
func (m *MockICreator) NewProduct() IProduct {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewProduct")
	ret0, _ := ret[0].(IProduct)
	return ret0
}

// NewProduct indicates an expected call of NewProduct.
func (mr *MockICreatorMockRecorder) NewProduct() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewProduct", reflect.TypeOf((*MockICreator)(nil).NewProduct))
}
